<?php


namespace Tests\Infrastructure\Messaging\Middleware;


use function foo\func;
use Infrastructure\Messaging\Adapters\RabbitMQ;
use Infrastructure\Messaging\ImmediateCommand;
use Infrastructure\Messaging\Middleware\CommandQueueMiddleware;
use Tests\Infrastructure\Base;
use Tests\Infrastructure\BaseCommand;

class CommandQueueMiddlewareTest extends Base
{

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testExecute() {
        $messageDispatcher = new RabbitMQ(
            '127.0.0.1',
            '/',
            'guest',
            'guest'
        );

        $middleware = new CommandQueueMiddleware($messageDispatcher, 'test');

        $executed = false;
        $middleware->execute(new BaseCommand(bin2hex(random_bytes(8))), function ($thing) use (&$executed) {
            $executed = true;
        });

        $this->assertTrue(!$executed);

        return $middleware;
    }

    /**
     * @param CommandQueueMiddleware $middleware
     *
     * @depends testExecute
     */
    public function testImmediateCommand(CommandQueueMiddleware $middleware) {
        $immediate = new ImmediateCommand(new BaseCommand(bin2hex(random_bytes(8))));

        $executed = false;
        $middleware->execute($immediate, function ($thing) use (&$executed) {
            $executed = true;
        });

        $this->assertTrue($executed);
    }
}